{"version":3,"sources":["Services/CallApi.tsx","Components/FormField/index.tsx","Assets/Images/no-data.svg","Components/Toolbar/index.tsx","Components/FormPopup/index.tsx","Components/InfoSection/index.tsx","Components/TableRow/index.tsx","Components/CustomErroPage/index.tsx","Components/Table/index.tsx","Containers/HomePage/index.tsx"],"names":["setHeaders","additionalHeaders","CallApi","url","requestType","data","a","fetch","process","REACT_APP_BASE_APP_URL","response","json","parsedData","method","headers","body","JSON","stringify","Option","Select","TextArea","Input","FormField","props","type","className","name","label","showSearch","style","width","placeholder","optionPlaceholder","optionFilterProp","onChange","value","option","disabled","selectFieldDisabled","optionData","map","rows","textAreaRows","e","target","errorMessage","module","exports","withRouter","src","alt","onClick","sessionStorage","clear","history","push","FormPopup","useState","formDetails","setFormDetails","setSelectFieldDisabled","callApi","setCallApi","userEmail","setUserEmail","prevState","useEffect","department","then","emailId","departentOptions","showPopupForm","showMessage","onSendRequest","onClickClose","InfoSection","setShowPopupForm","setShowMessage","setDepartentOptions","tempDepartmentOptions","toLowerCase","userDetail","firstName","comments","email","formRequest","userName","description","status","assignedToDepartment","createdBy","assignedTo","createdByDepartment","isError","setTimeout","TableRow","confirmBoxClassName","setConfirmBoxClassName","statusClassNme","setStatusClassNme","onSubmitRequest","confirmBox","sticker","title","items","item","showSticker","showConfirmBox","prototype","CustomErrorPage","errorImage","mainText","subText","tabs","reverseArray","arr","newArray","i","length","Table","userSelectedTabIndex","setUserSelectedTabIndex","requestedForms","setRequestedForms","departmentForms","setDepartmentForms","recievedForms","setRecievedForms","getTabClassName","index","getRowItems","rowData","tempRow","row","formId","_id","tab","onTabClick","erroImage","rowdata","requestData","id","reponse","getTableRows","userInfo","setUserInfo","token","getItem","parse","DashBoardTabLoader"],"mappings":"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","file":"static/js/4.86b9346d.chunk.js","sourcesContent":["export const setHeaders = () => {\r\n  // const token = localStorage.get('token', true);\r\n  const additionalHeaders: any = {};\r\n  additionalHeaders['Content-Type'] = 'application/json';\r\n  additionalHeaders.Accept = 'application/json';\r\n  additionalHeaders['Cache-Control'] = 'no-cache';\r\n  additionalHeaders.Pragma = 'no-cache';\r\n  // if (token && token.token && token.role && token.userName && token.userGuid) {\r\n  //   additionalHeaders.Authorization = `Bearer ${token.token}`;\r\n  // }\r\n  return additionalHeaders;\r\n};\r\n\r\nexport const postDataOptions = (url: string, data: any = {}) => {\r\n  let options: any;\r\n  if (data) {\r\n    options.data = data;\r\n  }\r\n  options.headers = setHeaders();\r\n  return options;\r\n};\r\n\r\nasync function postRequest(url: string, body: any, headers: {}) {\r\n  try {\r\n    const resposne = await fetch(url, {\r\n      method: 'post',\r\n      headers,\r\n      body: JSON.stringify(body),\r\n    });\r\n    const parsedResponse = await resposne.json();\r\n    JSON.stringify(body);\r\n    return parsedResponse;\r\n  } catch (error) {\r\n    return Promise.reject(error);\r\n  }\r\n}\r\n\r\n\r\ntype IRequestType = 'POST' | 'GET';\r\n\r\nexport async function CallApi(url: string, requestType: IRequestType, data?: any) {\r\n\r\n  if (requestType === 'GET') {\r\n    const response = await fetch(process.env.REACT_APP_BASE_APP_URL + url);\r\n    const parsedData = await response.json();\r\n    return parsedData;\r\n  } else {\r\n    const response = await fetch(process.env.REACT_APP_BASE_APP_URL + url, {\r\n      method: requestType,\r\n      headers: setHeaders(),\r\n      body: JSON.stringify(data),\r\n    })\r\n    const parsedData = await response.json();\r\n    return parsedData;\r\n  }\r\n\r\n}\r\n","import React from 'react';\r\nimport { Input, Select } from 'antd';\r\n\r\n\r\nimport { IOptionData } from '../../Interfaces';\r\n\r\nimport './index.scss';\r\n\r\nconst { Option } = Select;\r\nconst { TextArea } = Input;\r\n\r\ninterface FormFieldProps {\r\n  label?: string;\r\n  type: 'text' | 'password' | 'select' | 'textArea';\r\n  textAreaRows?: number;\r\n  onChange: any;\r\n  placeholder?: string;\r\n  name: string;\r\n  errorMessage?: string;\r\n  optionData?: IOptionData[];\r\n  optionPlaceholder?: string;\r\n  selectFieldDisabled?: boolean\r\n}\r\n\r\nfunction FormField(props: FormFieldProps) {\r\n\r\n\r\n  if (props.type === 'select') {\r\n    return (\r\n      <div className={`field field--${props.name}`}>\r\n        <div className={`field__label label--${props.name}`}>\r\n          {props.label} <span className='field__label__astrek'>*</span>\r\n        </div>\r\n        <Select\r\n          showSearch\r\n          style={{ width: 200 }}\r\n          placeholder={props.optionPlaceholder}\r\n          optionFilterProp=\"children\"\r\n          onChange={(value: any, option: any) => props.onChange(props.name, value)}\r\n          disabled={props.selectFieldDisabled}\r\n        >\r\n          {\r\n            props.optionData && props.optionData.map((data: IOptionData) => {\r\n              return <Option value={data.value}>{data.label}</Option>\r\n            })\r\n          }\r\n        </Select>\r\n      </div>\r\n    )\r\n  } else if (props.type === 'textArea') {\r\n    return (\r\n      <div className={`field field--${props.name}`}>\r\n        <div className={`field__label label--${props.name}`}>\r\n          {props.label} <span className='field__label__astrek'>*</span>\r\n        </div>\r\n        <TextArea rows={props.textAreaRows}\r\n          onChange={(e: any) => props.onChange(props.name, e.target.value)}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className={`field field--${props.name}`}>\r\n      <div className={`field__label label--${props.name}`}>\r\n        {props.label} <span className='field__label__astrek'>*</span>\r\n      </div>\r\n      <Input placeholder={props.placeholder} type={props.type} name={props.name}\r\n        onChange={(e: any) => props.onChange(props.name, e.target.value)} />\r\n      {\r\n        props.errorMessage ? <div className=\"field__errorMessage\">\r\n          {props.errorMessage}\r\n        </div>\r\n          : null}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default FormField;\r\n","module.exports = __webpack_public_path__ + \"static/media/no-data.3d13a36e.svg\";","import React from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\n\r\nfunction Toolbar(props: any) {\r\n\r\n  function onLogOut() {\r\n    sessionStorage.clear();\r\n    props.history.push('/login')\r\n  }\r\n\r\n  return (\r\n    <div className=\"toolbar shadow\">\r\n      <div className=\"toolbar__logo\">\r\n        <img src=\"https://switchon.io/img/website_logo.png\" alt=\"\" />\r\n      </div>\r\n      <div className=\"toolbar__logout\" onClick={onLogOut}>\r\n        Logout\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default withRouter(Toolbar);\r\n","import React, { useState, useEffect } from 'react';\r\n\r\nimport './index.scss';\r\nimport FormField from '../FormField';\r\nimport { IOptionData } from '../../Interfaces';\r\nimport { CallApi } from '../../Services/CallApi';\r\n\r\nconst hardCodedOptions: IOptionData[] = [\r\n  { label: 'Science', value: 'science' },\r\n  { label: 'Maths', value: 'maths' },\r\n  { label: 'History', value: 'history' },\r\n]\r\n\r\ninterface FormPopupProps {\r\n  onClickClose: any;\r\n  showPopupForm?: boolean;\r\n  onSendRequest: any;\r\n  showMessage?: string;\r\n  departentOptions?: IOptionData[]\r\n}\r\n\r\nfunction FormPopup(props: FormPopupProps) {\r\n\r\n  const [formDetails, setFormDetails] = useState<any>();\r\n  const [selectFieldDisabled, setSelectFieldDisabled] = useState(true);\r\n  const [callApi, setCallApi] = useState<string>();\r\n  const [userEmail, setUserEmail] = useState<any>();\r\n\r\n  useEffect(() => {\r\n    if (formDetails && formDetails.department) {\r\n      CallApi('/user/department/' + callApi, 'GET')\r\n        .then((parsedData: any) => {\r\n          parsedData && setUserEmail(parsedData.data.map((data: any) => {\r\n            return {\r\n              label: data.emailId,\r\n              value: data.emailId,\r\n            }\r\n          }))\r\n          setSelectFieldDisabled(false)\r\n        })\r\n    }\r\n  }, [callApi])\r\n\r\n  function onChange(name: string, value: string) {\r\n    setFormDetails((prevState: any) => ({\r\n      ...prevState, [name]: value\r\n    }))\r\n\r\n    if (name === 'department' && value) {\r\n      setCallApi(value);\r\n    }\r\n  }\r\n\r\n  if (!props.departentOptions) {\r\n    return (\r\n      <p>loading</p>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div className={props.showPopupForm ? 'formPopup shadow' : 'formPopup hide'}>\r\n      <div className=\"formPopup__header\">Create your Request</div>\r\n      {props.showMessage ? <div className=\"formPopup__header__formMsg\">{props.showMessage}</div> : null}\r\n      <FormField name='department' type=\"select\" optionData={props.departentOptions} label='Select Department'\r\n        optionPlaceholder=\"Select department\" onChange={onChange} />\r\n\r\n      <FormField name='email' type=\"select\" optionData={userEmail} label='Enter your Email'\r\n        optionPlaceholder=\"Enter your Email\" onChange={onChange} selectFieldDisabled={selectFieldDisabled} />\r\n\r\n      <FormField name='comments' type=\"textArea\" label='Comments' textAreaRows={9}\r\n        onChange={onChange} />\r\n      <div className='formPopup__button' onClick={() => props.onSendRequest(formDetails)}>Send Request</div>\r\n      <div className=\"formPopup__closeButton\" onClick={props.onClickClose}>X</div>\r\n    </div >\r\n  )\r\n}\r\n\r\nexport default FormPopup;\r\n","import React, { useState, useEffect } from 'react';\r\n\r\nimport { IUserDetail, IOptionData } from '../../Interfaces';\r\nimport FormPopup from '../FormPopup';\r\nimport { CallApi } from '../../Services/CallApi';\r\n\r\ninterface InfoSectionProps {\r\n  userDetail: IUserDetail;\r\n}\r\n\r\nfunction InfoSection(props: InfoSectionProps) {\r\n  const [showPopupForm, setShowPopupForm] = useState(false);\r\n  const [showMessage, setShowMessage] = useState('')\r\n  const [departentOptions, setDepartentOptions] = useState<IOptionData[]>([])\r\n\r\n  useEffect(() => {\r\n    const departmentOptions: IOptionData[] = [\r\n      { label: 'Maths', value: 'maths' },\r\n      { label: 'History', value: 'history' },\r\n      { label: 'Chemistry', value: 'chemistry' },\r\n      { label: 'Biology', value: 'biology' },\r\n      { label: 'Physics', value: 'physics' },\r\n    ];\r\n    const tempDepartmentOptions: IOptionData[] = [];\r\n    departmentOptions.map((department: IOptionData) => {\r\n      if (department.value.toLowerCase() !== props.userDetail.department.toLowerCase()) {\r\n        tempDepartmentOptions.push(department)\r\n      }\r\n\r\n    })\r\n    setDepartentOptions(tempDepartmentOptions);\r\n  }, [])\r\n\r\n  function createForm() {\r\n    setShowPopupForm(!showPopupForm);\r\n  }\r\n  function onClickClose() {\r\n    setShowPopupForm(!showPopupForm);\r\n  }\r\n  function onSendRequest(formDetails: any) {\r\n    if (!formDetails || !formDetails.comments || !formDetails.department || !formDetails.email) {\r\n      setShowMessage('Fill all details');\r\n      return;\r\n    }\r\n    const formRequest = {\r\n      userName: props.userDetail.firstName,\r\n      description: formDetails.comments,\r\n      status: \"Pending\",\r\n      assignedToDepartment: formDetails.department,\r\n      createdBy: props.userDetail.emailId,\r\n      assignedTo: formDetails.email,\r\n      createdByDepartment: props.userDetail.department,\r\n    }\r\n    CallApi('/form/', 'POST', formRequest)\r\n      .then((parsedData: any) => {\r\n        if (!parsedData.isError) {\r\n          setShowMessage('Request sent successfully')\r\n          setTimeout(() => { setShowPopupForm(!showPopupForm); }, 1000)\r\n        } else {\r\n          setShowMessage('Error occured')\r\n        }\r\n      })\r\n  }\r\n  return (\r\n    <div className=\"infoSection\">\r\n      <div className=\"infoSection__userinfo\">\r\n        <p className='infoSection__userinfo__header'>\r\n          <span className='infoSection__userinfo__header__label--hi'>Hi </span>\r\n          <span className='infoSection__userinfo__header__label--name'> {props.userDetail.firstName}</span>\r\n          <div className=\"infoSection__button shadow\" onClick={createForm}>\r\n            Create Form\r\n          </div>\r\n        </p>\r\n        <p className='infoSection__userinfo__subtitle'>{props.userDetail.department} Department</p>\r\n      </div>\r\n      <div className=\"infoSection__img\">\r\n        <img src=\"https://d3n32ilufxuvd1.cloudfront.net/5c8792f4cdf6a301a044dfab/1433684/upload-0c8526b7-5f57-4efd-b350-6806c4d7a226.png\" alt=\"\" />\r\n      </div>\r\n      <div className={showPopupForm ? \"infoSection__formContainer darkbackground\" : 'infoSection__formContainer'} />\r\n      <FormPopup showPopupForm={showPopupForm} onClickClose={onClickClose}\r\n        onSendRequest={onSendRequest} showMessage={showMessage} departentOptions={departentOptions} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default InfoSection;\r\n","import React, { useState, useEffect } from 'react';\r\n\r\nimport './index.scss';\r\nimport { IFormItem } from '../../Interfaces';\r\n\r\n\r\ninterface TableRowProps {\r\n  title?: string;\r\n  items: IFormItem[];\r\n  confirmBox?: boolean;\r\n  sticker?: string;\r\n  onSubmitRequest?: any;\r\n}\r\n\r\nTableRow.prototype = {\r\n  confirmBox: false,\r\n}\r\n\r\nfunction TableRow(props: TableRowProps) {\r\n  const [confirmBoxClassName, setConfirmBoxClassName] = useState<any>('tablerow__confirmBox');\r\n  const [statusClassNme, setStatusClassNme] = useState<string>();\r\n\r\n  function onSubmitRequest(status: string) {\r\n    if (props.confirmBox) {\r\n      setConfirmBoxClassName('tablerow__confirmBox hide');\r\n      setStatusClassNme(status);\r\n      props.onSubmitRequest(status);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    props.sticker && setStatusClassNme(props.sticker)\r\n  }, [props.sticker])\r\n\r\n  function showSticker() {\r\n    if (props.sticker) {\r\n      return (\r\n        <div className=\"tablerow__section__item\">\r\n          <div className=\"tablerow__section__item__header\">Status</div>\r\n          <div className={`tablerow__section__item__sticker sticker--${statusClassNme}`}>\r\n            {statusClassNme}\r\n          </div>\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n\r\n  function showConfirmBox() {\r\n    if (props.confirmBox && props.sticker === 'Pending') {\r\n      return (\r\n        <div className={confirmBoxClassName}>\r\n          <div className=\"tablerow__confirmBox__button\" onClick={() => onSubmitRequest('APPROVED')}>\r\n            <div className=\"tablerow__confirmBox__button--accept\">\r\n              Accept request\r\n          </div>\r\n          </div>\r\n          <div className=\"tablerow__confirmBox__button\" onClick={() => onSubmitRequest('REJECTED')}>\r\n            <div className=\"tablerow__confirmBox__button--cancelled\">\r\n              Cancel request\r\n          </div>\r\n          </div>\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className='tablerow'>\r\n      <div className=\"tablerow__title\">{props.title}</div>\r\n      <div className='tablerow__section'>\r\n        {\r\n          props.items && props.items.map((item: IFormItem) => {\r\n            if (item.label !== 'Id') {\r\n              if (item.label !== 'Status') {\r\n                if (item.label !== 'formId') {\r\n                  return (\r\n                    <div className=\"tablerow__section__item\">\r\n                      <div className=\"tablerow__section__item__header\">{item.label}</div>\r\n                      <div className=\"tablerow__section__item__value\">{item.value}</div>\r\n                    </div>\r\n                  );\r\n                }\r\n              }\r\n            }\r\n          })\r\n        }\r\n        {showSticker()}\r\n      </div>\r\n      {showConfirmBox()}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default TableRow;\r\n","import React from 'react';\r\nimport './index.scss';\r\n\r\ninterface CustomErrorPageProps {\r\n  mainText?: string;\r\n  subText?: string;\r\n  errorImage?: any;\r\n}\r\n\r\nfunction CustomErrorPage(props: CustomErrorPageProps) {\r\n  return (\r\n    <div className='empty-data-error-page'>\r\n      <img className='empty-data-img' src={props.errorImage} />\r\n      <p className='empty-data-header-msg'>{props.mainText}</p>\r\n      <p className='empty-data-error-message'>{props.subText}</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CustomErrorPage;\r\n","import React, { useState, useEffect } from 'react'\r\nimport TableRow from '../TableRow';\r\nimport { IFormItem, ILabelValue } from '../../Interfaces';\r\nimport CustomErrorPage from '../CustomErroPage';\r\n\r\nimport erroImage from '../../Assets/Images/no-data.svg';\r\nimport { CallApi } from '../../Services/CallApi';\r\n\r\n// const hardCodedItems: IFormItem[] = [\r\n//   { header: 'header1', value: 'value1' },\r\n//   { header: 'header1', value: 'value1' },\r\n//   { header: 'header1', value: 'value1' },\r\n//   { header: 'header1', value: 'value1' },\r\n//   { header: 'header1', value: 'value1' },\r\n// ]\r\n\r\nconst tabs: ILabelValue[] = [\r\n  { label: 'Department Requests', value: 'departmentForms' },\r\n  { label: 'Requested Forms', value: 'requestedForms' },\r\n  { label: 'Recieved Forms', value: 'recieved Forms' },\r\n\r\n]\r\n\r\ninterface TableProps {\r\n  userDetail?: any\r\n}\r\n\r\nfunction reverseArray(arr: any) {\r\n  var newArray = [];\r\n  for (var i = arr.length - 1; i >= 0; i--) {\r\n    newArray.push(arr[i]);\r\n  }\r\n  return newArray;\r\n}\r\n\r\nfunction Table(props: TableProps) {\r\n  const [userSelectedTabIndex, setUserSelectedTabIndex] = useState<number>(0);\r\n  const [requestedForms, setRequestedForms] = useState<any>([]);\r\n  const [departmentForms, setDepartmentForms] = useState<any>([]);\r\n  const [recievedForms, setRecievedForms] = useState<any>([]);\r\n  const [showConfirmBox, setShowConfirmBox] = useState(true)\r\n\r\n  const ERROR_PAGE_MAIN_MSG = 'Sorry!';\r\n  const ERROR_PAGE_SUB_MSG = 'No data found';\r\n\r\n\r\n  useEffect(() => {\r\n    setDepartmentForms(getRowItems(props.userDetail.departmentForms));\r\n  }, [])\r\n\r\n  function onSubmitRequest(status: string, rowdata: any) {\r\n    const requestData = {\r\n      id: rowdata[7].value,\r\n      status: status,\r\n      assignedToDepartment: rowdata[4].value,\r\n      createdBy: rowdata[0].value,\r\n      assignedTo: rowdata[2].value,\r\n      createdByDepartment: rowdata[1].value,\r\n      formId: rowdata[6].value\r\n    }\r\n    CallApi('/form/update', 'POST', requestData)\r\n      .then((reponse: any) => {\r\n      })\r\n  }\r\n\r\n  function onTabClick(tab: ILabelValue, index: number) {\r\n    setUserSelectedTabIndex(index);\r\n    if (index === 0) {\r\n      setDepartmentForms(getRowItems(props.userDetail.departmentForms));\r\n    } else if (index === 1) {\r\n      setRequestedForms(getRowItems(props.userDetail.requestedForms));\r\n    }\r\n    else {\r\n      setRecievedForms(getRowItems(props.userDetail.recievedForms));\r\n    }\r\n\r\n  }\r\n\r\n  function getTabClassName(index: number) {\r\n    return userSelectedTabIndex === index ? 'table__tabSection__tabs--active shadow'\r\n      : 'table__tabSection__tabs';\r\n  }\r\n\r\n  function getRowItems(rowData: any) {\r\n    const tempRow: any = [];\r\n    rowData && rowData.map((data: any) => {\r\n      const row = [\r\n        { label: 'Requested From', value: data.createdBy },\r\n        { label: 'From Department', value: data.createdByDepartment },\r\n        { label: 'Requested To', value: data.assignedTo },\r\n        { label: 'Description', value: data.description },\r\n        { label: 'To Department', value: data.assignedToDepartment },\r\n        { label: 'Status', value: data.status },\r\n        { label: 'formId', value: data.formId },\r\n        { label: 'Id', value: data._id },\r\n      ]\r\n      tempRow.push(row);\r\n    })\r\n    return tempRow;\r\n  }\r\n\r\n  function getTableRows() {\r\n    let data: any;\r\n    if (userSelectedTabIndex === 0) {\r\n      data = reverseArray(departmentForms)\r\n    } else if (userSelectedTabIndex === 1) {\r\n      data = reverseArray(requestedForms);\r\n    } else {\r\n      data = reverseArray(recievedForms);\r\n    }\r\n\r\n    if (data && data.length === 0) {\r\n      return (\r\n        <CustomErrorPage mainText={ERROR_PAGE_MAIN_MSG} subText={ERROR_PAGE_SUB_MSG}\r\n          errorImage={erroImage}\r\n        />\r\n      )\r\n    } else {\r\n      return data && data.map((rowdata: any) => {\r\n        const showConfirmBox = userSelectedTabIndex === 2 ? true : false\r\n        return (\r\n          <TableRow title={rowdata[6].value} items={rowdata}\r\n            confirmBox={showConfirmBox} sticker={rowdata[5].value}\r\n            onSubmitRequest={(status: string) => onSubmitRequest(status, rowdata)}\r\n          />\r\n        )\r\n      })\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"table\">\r\n      <div className=\"table__title\">Forms in this Department: </div>\r\n      <div className=\"table__tabSection\">\r\n        {\r\n          tabs && tabs.map((tab: ILabelValue, index: number) => {\r\n            return (\r\n              <div className={getTabClassName(index)} onClick={() => onTabClick(tab, index)}>\r\n                {tab.label}\r\n              </div>\r\n            )\r\n          })\r\n        }\r\n      </div>\r\n\r\n      <div className=\"table__wrapper shadow\">\r\n        {getTableRows()}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Table;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nimport Toolbar from '../../Components/Toolbar';\r\nimport InfoSection from '../../Components/InfoSection';\r\n\r\nimport './index.scss';\r\nimport { IUserDetail } from '../../Interfaces';\r\nimport Table from '../../Components/Table';\r\nimport Sidebar from '../../Components/Sidebar';\r\nimport { CallApi } from '../../Services/CallApi';\r\nimport DashBoardTabLoader from '../../Components/DashBoardTabLoader';\r\n\r\nfunction HomePage(props: any) {\r\n  const [userInfo, setUserInfo] = useState<any>();\r\n\r\n  useEffect(() => {\r\n    const token = sessionStorage.getItem('userDetailId');\r\n    token && setUserInfo(JSON.parse(token))\r\n    token && CallApi('/user/' + JSON.parse(token), 'GET')\r\n      .then((parsedData: any) => {\r\n        setUserInfo(parsedData)\r\n      })\r\n  }, [])\r\n\r\n  if (!userInfo) {\r\n    return <DashBoardTabLoader />\r\n  }\r\n\r\n  if (!userInfo.data) {\r\n    return <p className=\"Loading\"></p>\r\n  }\r\n\r\n  return (\r\n    <div className='homePage'>\r\n      <Toolbar />\r\n      {/* <Sidebar /> */}\r\n      <InfoSection userDetail={userInfo.data} />\r\n      <Table userDetail={userInfo.data} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default withRouter(HomePage);\r\n"],"sourceRoot":""}